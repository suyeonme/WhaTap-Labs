[{"/Users/suyeonkang/Desktop/frontend-test/src/index.js":"1","/Users/suyeonkang/Desktop/frontend-test/src/reportWebVitals.js":"2","/Users/suyeonkang/Desktop/frontend-test/src/App.js":"3","/Users/suyeonkang/Desktop/frontend-test/src/components/Informatics/Informatics.js":"4","/Users/suyeonkang/Desktop/frontend-test/src/hooks/useFirstRender.js":"5","/Users/suyeonkang/Desktop/frontend-test/src/components/BarChart/BarChart.js":"6","/Users/suyeonkang/Desktop/frontend-test/src/api/api.js":"7","/Users/suyeonkang/Desktop/frontend-test/src/containers/Dashboard/Dashboard.js":"8"},{"size":279,"mtime":1612164171906,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1611901443754,"results":"11","hashOfConfig":"10"},{"size":481,"mtime":1612190133876,"results":"12","hashOfConfig":"10"},{"size":2207,"mtime":1612190163941,"results":"13","hashOfConfig":"10"},{"size":237,"mtime":1612081698138,"results":"14","hashOfConfig":"10"},{"size":2008,"mtime":1612190066561,"results":"15","hashOfConfig":"10"},{"size":2272,"mtime":1612187335173,"results":"16","hashOfConfig":"10"},{"size":361,"mtime":1612190145228,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kotfz2",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/suyeonkang/Desktop/frontend-test/src/index.js",[],"/Users/suyeonkang/Desktop/frontend-test/src/reportWebVitals.js",[],["36","37"],"/Users/suyeonkang/Desktop/frontend-test/src/App.js",["38"],"/Users/suyeonkang/Desktop/frontend-test/src/components/Informatics/Informatics.js",[],"/Users/suyeonkang/Desktop/frontend-test/src/hooks/useFirstRender.js",[],"/Users/suyeonkang/Desktop/frontend-test/src/components/BarChart/BarChart.js",["39"],"/Users/suyeonkang/Desktop/frontend-test/src/api/api.js",["40"],"// import axios from 'axios';\r\n\r\nconst DEMO_PROJECT_API_TOCKEN = 'XGJHUSQZTI2AVIENWA27HI5V';\r\nconst DEMO_PROJECT_CODE = 5490;\r\nexport const OPEN_API_HEADERS = {\r\n  'x-whatap-pcode': DEMO_PROJECT_CODE,\r\n  'x-whatap-token': DEMO_PROJECT_API_TOCKEN,\r\n};\r\n\r\nexport const OPEN_API_ROOT = 'https://service.whatap.io/open/api';\r\n\r\nconst OPEN_API = {\r\n  '': {\r\n    act_agent: '활성화 상태의 에이전트 수',\r\n    inact_agent: '비활성화 상태의 에이전트 수',\r\n    host: '호스트 수',\r\n    cpucore: '호스트의 CPU 코어 합',\r\n    txcount: '트랜잭션 수',\r\n    tps: '초당 트랜잭션 수',\r\n    user: '5분간 집계된 고유 사용자 수',\r\n    actx: '액티브 트랜잭션 수',\r\n    rtime: '평균 응답 시간',\r\n    cpu: 'CPU 사용률',\r\n    threadpool_active: '쓰레드풀 활성 쓰레드 수',\r\n    threadpool_queue: '쓰레드풀 큐잉 쓰레드 수',\r\n    dbc_count: '전체 DB Connection 수',\r\n    dbc_active: '활성(Active) DB Connection 수',\r\n    dbc_idle: '비활성(Idle) DB Connection 수',\r\n    act_method: '액티브 Method 수',\r\n    act_sql: '액티브 SQL 수',\r\n    act_httpc: '액티브 HTTP Call 수',\r\n    act_dbc: '액티브 DB Connection 수',\r\n    act_socket: '액티브 Socket 수',\r\n  },\r\n  json: {\r\n    'exception/{stime}/{etime}': 'Exception 발생 ',\r\n  },\r\n};\r\n\r\nconst getPath = (url, param = {}) => {\r\n  let path = url;\r\n  for (let key in param) {\r\n    path = path.replace(new RegExp('\\\\{' + key + '\\\\}', 'g'), param[key]);\r\n  }\r\n  return path;\r\n};\r\n\r\nconst getOpenApi = type => (key, param) =>\r\n  new Promise((resolve, reject) => {\r\n    if (key in OPEN_API[type]) {\r\n      return resolve({\r\n        url: [OPEN_API_ROOT, type, key].join('/'),\r\n        name: OPEN_API[type][key],\r\n      });\r\n    } else {\r\n      reject('잘못된 API 정보');\r\n    }\r\n  }).then(({ url, name }) =>\r\n    fetch(getPath(url, param), {\r\n      headers: OPEN_API_HEADERS,\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => ({\r\n        key,\r\n        name,\r\n        data,\r\n      }))\r\n  );\r\n\r\nconst spot = getOpenApi('');\r\nconst series = getOpenApi('json');\r\n\r\n// export const instance = axios.create({\r\n//   baseURL: OPEN_API_ROOT,\r\n//   headers: OPEN_API_HEADERS,\r\n// });\r\n\r\nexport default { spot, series };\r\n","/Users/suyeonkang/Desktop/frontend-test/src/containers/Dashboard/Dashboard.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":3,"column":7,"nodeType":"47","messageId":"48","endLine":3,"endColumn":11},{"ruleId":"45","severity":1,"message":"49","line":30,"column":9,"nodeType":"47","messageId":"48","endLine":30,"endColumn":18},{"ruleId":"50","severity":1,"message":"51","line":78,"column":1,"nodeType":"52","endLine":78,"endColumn":33},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'HOUR' is assigned a value but never used.","Identifier","unusedVar","'fetchData' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]