[{"/Users/suyeonkang/Desktop/frontend-test/src/hooks/useFetch.ts":"1","/Users/suyeonkang/Desktop/frontend-test/src/index.tsx":"2","/Users/suyeonkang/Desktop/frontend-test/src/App.tsx":"3","/Users/suyeonkang/Desktop/frontend-test/src/components/Dashboard/Dashboard.tsx":"4","/Users/suyeonkang/Desktop/frontend-test/src/components/BarChart/BarChart.tsx":"5","/Users/suyeonkang/Desktop/frontend-test/src/components/BarChart/BarChartStyle.tsx":"6","/Users/suyeonkang/Desktop/frontend-test/src/components/Informatics/Informatics.tsx":"7","/Users/suyeonkang/Desktop/frontend-test/src/api/api.ts":"8","/Users/suyeonkang/Desktop/frontend-test/src/components/Layout/Layout.tsx":"9","/Users/suyeonkang/Desktop/frontend-test/src/styles/styles.ts":"10","/Users/suyeonkang/Desktop/frontend-test/src/utilities/utilities.ts":"11","/Users/suyeonkang/Desktop/frontend-test/src/components/UI/Modal.tsx":"12","/Users/suyeonkang/Desktop/frontend-test/src/components/UI/TitleWithInfo.tsx":"13","/Users/suyeonkang/Desktop/frontend-test/src/hooks/useClickOutside.ts":"14","/Users/suyeonkang/Desktop/frontend-test/src/components/LineChart/LineChart.js":"15","/Users/suyeonkang/Desktop/frontend-test/src/hooks/useFetchSeries.tsx":"16","/Users/suyeonkang/Desktop/frontend-test/src/components/LineChart/LineChartStyle.tsx":"17","/Users/suyeonkang/Desktop/frontend-test/src/reducer/context.js":"18","/Users/suyeonkang/Desktop/frontend-test/src/reducer/reducer.js":"19","/Users/suyeonkang/Desktop/frontend-test/src/reducer/actions.js":"20"},{"size":938,"mtime":1613106397429,"results":"21","hashOfConfig":"22"},{"size":228,"mtime":1612597618519,"results":"23","hashOfConfig":"22"},{"size":228,"mtime":1613106377867,"results":"24","hashOfConfig":"22"},{"size":1308,"mtime":1613106410530,"results":"25","hashOfConfig":"22"},{"size":3344,"mtime":1613106418179,"results":"26","hashOfConfig":"22"},{"size":239,"mtime":1612693164516,"results":"27","hashOfConfig":"22"},{"size":2132,"mtime":1613105465478,"results":"28","hashOfConfig":"22"},{"size":2816,"mtime":1612872729732,"results":"29","hashOfConfig":"22"},{"size":1687,"mtime":1612604258910,"results":"30","hashOfConfig":"22"},{"size":128,"mtime":1612600418760,"results":"31","hashOfConfig":"22"},{"size":215,"mtime":1613099095382,"results":"32","hashOfConfig":"22"},{"size":975,"mtime":1612758794372,"results":"33","hashOfConfig":"22"},{"size":1023,"mtime":1612703956297,"results":"34","hashOfConfig":"22"},{"size":524,"mtime":1612702409830,"results":"35","hashOfConfig":"22"},{"size":6730,"mtime":1613103145840,"results":"36","hashOfConfig":"22"},{"size":2556,"mtime":1613103148375,"results":"37","hashOfConfig":"22"},{"size":588,"mtime":1613098229941,"results":"38","hashOfConfig":"22"},{"size":500,"mtime":1613106391503,"results":"39","hashOfConfig":"22"},{"size":1135,"mtime":1613106387174,"results":"40","hashOfConfig":"22"},{"size":478,"mtime":1613105402175,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w855aj",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"/Users/suyeonkang/Desktop/frontend-test/src/hooks/useFetch.ts",[],"/Users/suyeonkang/Desktop/frontend-test/src/index.tsx",[],["86","87"],"/Users/suyeonkang/Desktop/frontend-test/src/App.tsx",[],"/Users/suyeonkang/Desktop/frontend-test/src/components/Dashboard/Dashboard.tsx",["88","89","90","91","92"],"/Users/suyeonkang/Desktop/frontend-test/src/components/BarChart/BarChart.tsx",["93"],"/Users/suyeonkang/Desktop/frontend-test/src/components/BarChart/BarChartStyle.tsx",[],"/Users/suyeonkang/Desktop/frontend-test/src/components/Informatics/Informatics.tsx",["94","95","96","97","98"],"import styled from 'styled-components';\n\nimport { Endpoints, Data } from 'types/types';\nimport useFetch from 'hooks/useFetch';\nimport { Placeholder } from 'styles/styles';\n\ninterface InformaticsProps {\n  endpoints: Endpoints;\n  title: string;\n}\n\nconst List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst Item = styled.li`\n  margin: 2rem 0;\n\n  span {\n    font-size: 3.5rem;\n    font-weight: 100;\n    margin-left: 1rem;\n    opacity: 0.7;\n  }\n`;\n\nfunction Informatics({ endpoints, title }: InformaticsProps) {\n  // const [data, loading, error] = useFetch(endpoints);\n\n  // if (error) {\n  //   return <Placeholder>Error: {error}</Placeholder>;\n  // }\n\n  // if (loading) {\n  //   return <Placeholder>loading...</Placeholder>;\n  // }\n\n  return (\n    <div>\n      <h2>{title}</h2>\n      {/* <List>\n        {data.map((d: Data) => (\n          <Item key={d.name}>\n            {d.name} <span>{d.data}</span>\n          </Item>\n        ))}\n      </List> */}\n    </div>\n  );\n}\n\nexport default Informatics;\n\n// import styled from 'styled-components';\n\n// import { Endpoints, Data } from 'types/types';\n// import useFetch from 'hooks/useFetch';\n// import { Placeholder } from 'styles/styles';\n\n// interface InformaticsProps {\n//   endpoints: Endpoints;\n//   title: string;\n// }\n\n// const List = styled.ul`\n//   list-style: none;\n//   margin: 0;\n//   padding: 0;\n// `;\n\n// const Item = styled.li`\n//   margin: 2rem 0;\n\n//   span {\n//     font-size: 3.5rem;\n//     font-weight: 100;\n//     margin-left: 1rem;\n//     opacity: 0.7;\n//   }\n// `;\n\n// function Informatics({ endpoints, title }: InformaticsProps) {\n//   const [data, loading, error] = useFetch(endpoints);\n\n//   if (error) {\n//     return <Placeholder>Error: {error}</Placeholder>;\n//   }\n\n//   if (loading) {\n//     return <Placeholder>loading...</Placeholder>;\n//   }\n\n//   return (\n//     <div>\n//       <h2>{title}</h2>\n//       <List>\n//         {data.map((d: Data) => (\n//           <Item key={d.name}>\n//             {d.name} <span>{d.data}</span>\n//           </Item>\n//         ))}\n//       </List>\n//     </div>\n//   );\n// }\n\n// export default Informatics;\n","/Users/suyeonkang/Desktop/frontend-test/src/api/api.ts",[],"/Users/suyeonkang/Desktop/frontend-test/src/components/Layout/Layout.tsx",[],"/Users/suyeonkang/Desktop/frontend-test/src/styles/styles.ts",[],"/Users/suyeonkang/Desktop/frontend-test/src/utilities/utilities.ts",[],"/Users/suyeonkang/Desktop/frontend-test/src/components/UI/Modal.tsx",[],"/Users/suyeonkang/Desktop/frontend-test/src/components/UI/TitleWithInfo.tsx",[],"/Users/suyeonkang/Desktop/frontend-test/src/hooks/useClickOutside.ts",[],"/Users/suyeonkang/Desktop/frontend-test/src/components/LineChart/LineChart.js",["99"],"import { useEffect, useCallback, useRef } from 'react';\nimport {\n  scaleLinear,\n  scaleTime,\n  extent,\n  curveMonotoneX,\n  line,\n  select,\n  axisLeft,\n  axisBottom,\n  easeLinear,\n  active,\n} from 'd3';\n\nimport useFetchSeries from 'hooks/useFetchSeries';\nimport { WIDTH, HEIGHT } from 'utilities/utilities';\nimport { Placeholder } from 'styles/styles';\nimport {\n  OuterGroup,\n  LinePath,\n  Axis,\n} from 'components/LineChart/LineChartStyle';\nimport TitleWithInfo from 'components/UI/TitleWithInfo';\n\n// 'visitor_5m/{stime}/{etime}'\n// stime\n// etime\n\nconst MARGINS = { top: 5, bottom: 20, left: 25, right: 25 };\nconst INNER_WIDTH = WIDTH - MARGINS.right - MARGINS.left;\nconst INNER_HEIGHT = HEIGHT - MARGINS.top - MARGINS.bottom;\nconst MODAL_CONTENT = `실시간 브라우저 사용자 수를 카운팅하여 보여줍니다. 매5초마다 최근 5분이내에 트랜잭션을 일으킨 사용자를 카운팅 하여 보여줍니다.`;\n\nfunction LineChart({ title }) {\n  const [data, loading, error] = useFetchSeries(); //(*)\n\n  const lineRef = useRef(null);\n  const axesRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n\n  const xValue = d => d[0];\n  const yValue = d => d[1];\n\n  const xScale = scaleTime()\n    .domain(extent(data, xValue))\n    .range([0, INNER_WIDTH])\n    .nice();\n\n  const yScale = scaleLinear()\n    .domain(extent(data, yValue))\n    .range([INNER_HEIGHT, 0])\n    .nice();\n\n  var lineGenerator = line()\n    .x(d => xScale(xValue(d)))\n    .y(d => yScale(yValue(d)))\n    .curve(curveMonotoneX);\n\n  const handleDrawLine = useCallback(\n    group => {\n      group\n        .selectAll('path')\n        .data([data])\n        .join('path')\n        .attr('d', lineGenerator);\n    },\n    [data, lineGenerator]\n  );\n\n  const handleDrawAxes = useCallback(() => {\n    const xGroup = select(xAxisRef.current);\n    const yGroup = select(yAxisRef.current);\n    const xAxis = axisBottom(xScale).tickSizeOuter(0);\n    const yAxis = axisLeft(yScale).tickSizeOuter(0);\n    yGroup.call(yAxis);\n    xGroup.transition().duration(750).ease(easeLinear).call(xAxis);\n\n    // xGroup\n    //   .call(xAxis)\n    //   .transition()\n    //   .duration(750)\n    //   .ease(easeLinear)\n    //   .on('start', () => animate(xAxis, xGroup));\n  }, [xScale, yScale]);\n\n  useEffect(() => {\n    const lineGroup = select(lineRef.current);\n    const AxesGroup = select(axesRef.current);\n\n    handleDrawLine(lineGroup);\n    handleDrawAxes(AxesGroup);\n  }, [handleDrawLine, handleDrawAxes]);\n\n  if (error) {\n    return <Placeholder>Error: {error}</Placeholder>;\n  }\n\n  if (loading) {\n    return <Placeholder>loading...</Placeholder>;\n  }\n\n  return (\n    <div>\n      <TitleWithInfo title={title} modalContent={MODAL_CONTENT} />\n      <div>\n        <svg width={WIDTH} height={HEIGHT}>\n          <OuterGroup left={MARGINS.left} top={MARGINS.top}>\n            <g ref={axesRef}>\n              <Axis\n                ref={xAxisRef}\n                axisType=\"xAxis\"\n                innerHeight={INNER_HEIGHT}\n              />\n              <Axis ref={yAxisRef} axisType=\"yAxis\" />\n            </g>\n            <LinePath ref={lineRef} />\n          </OuterGroup>\n        </svg>\n      </div>\n    </div>\n  );\n}\n\nexport default LineChart;\n\n// import { useEffect, useCallback, useRef } from 'react';\n// import {\n//   scaleLinear,\n//   scaleTime,\n//   extent,\n//   curveMonotoneX,\n//   line,\n//   select,\n//   axisLeft,\n//   axisBottom,\n//   easeLinear,\n//   active,\n// } from 'd3';\n\n// import useFetchSeries from 'hooks/useFetchSeries';\n// import { WIDTH, HEIGHT } from 'utilities/utilities';\n// import { Placeholder } from 'styles/styles';\n// import {\n//   OuterGroup,\n//   LinePath,\n//   Axis,\n// } from 'components/LineChart/LineChartStyle';\n// import TitleWithInfo from 'components/UI/TitleWithInfo';\n\n// const MARGINS = { top: 5, bottom: 20, left: 25, right: 25 };\n// const INNER_WIDTH = WIDTH - MARGINS.right - MARGINS.left;\n// const INNER_HEIGHT = HEIGHT - MARGINS.top - MARGINS.bottom;\n// const MODAL_CONTENT = `실시간 브라우저 사용자 수를 카운팅하여 보여줍니다. 매5초마다 최근 5분이내에 트랜잭션을 일으킨 사용자를 카운팅 하여 보여줍니다.`;\n\n// function LineChart({ title }) {\n//   const [data, loading, error] = useFetchSeries(); //(*)\n\n//   const lineRef = useRef(null);\n//   const axesRef = useRef(null);\n//   const xAxisRef = useRef(null);\n//   const yAxisRef = useRef(null);\n\n//   const xValue = d => d[0];\n//   const yValue = d => d[1];\n\n//   const xScale = scaleTime()\n//     .domain(extent(data, xValue))\n//     .range([0, INNER_WIDTH])\n//     .nice();\n\n//   const yScale = scaleLinear()\n//     .domain(extent(data, yValue))\n//     .range([INNER_HEIGHT, 0])\n//     .nice();\n\n//   var lineGenerator = line()\n//     .x(d => xScale(xValue(d)))\n//     .y(d => yScale(yValue(d)))\n//     .curve(curveMonotoneX);\n\n//   const handleDrawLine = useCallback(\n//     group => {\n//       group\n//         .selectAll('path')\n//         .data([data])\n//         .join('path')\n//         .attr('d', lineGenerator);\n//     },\n//     [data, lineGenerator]\n//   );\n\n//   const handleDrawAxes = useCallback(() => {\n//     const xGroup = select(xAxisRef.current);\n//     const yGroup = select(yAxisRef.current);\n//     const xAxis = axisBottom(xScale).tickSizeOuter(0);\n//     const yAxis = axisLeft(yScale).tickSizeOuter(0);\n//     yGroup.call(yAxis);\n//     xGroup.transition().duration(750).ease(easeLinear).call(xAxis);\n\n//     // xGroup\n//     //   .call(xAxis)\n//     //   .transition()\n//     //   .duration(750)\n//     //   .ease(easeLinear)\n//     //   .on('start', () => animate(xAxis, xGroup));\n//   }, [xScale, yScale]);\n\n//   useEffect(() => {\n//     const lineGroup = select(lineRef.current);\n//     const AxesGroup = select(axesRef.current);\n\n//     handleDrawLine(lineGroup);\n//     handleDrawAxes(AxesGroup);\n//   }, [handleDrawLine, handleDrawAxes]);\n\n//   if (error) {\n//     return <Placeholder>Error: {error}</Placeholder>;\n//   }\n\n//   if (loading) {\n//     return <Placeholder>loading...</Placeholder>;\n//   }\n\n//   return (\n//     <div>\n//       <TitleWithInfo title={title} modalContent={MODAL_CONTENT} />\n//       <div>\n//         <svg width={WIDTH} height={HEIGHT}>\n//           <OuterGroup left={MARGINS.left} top={MARGINS.top}>\n//             <g ref={axesRef}>\n//               <Axis\n//                 ref={xAxisRef}\n//                 axisType=\"xAxis\"\n//                 innerHeight={INNER_HEIGHT}\n//               />\n//               <Axis ref={yAxisRef} axisType=\"yAxis\" />\n//             </g>\n//             <LinePath ref={lineRef} />\n//           </OuterGroup>\n//         </svg>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default LineChart;\n",["100","101"],"/Users/suyeonkang/Desktop/frontend-test/src/hooks/useFetchSeries.tsx",[],"/Users/suyeonkang/Desktop/frontend-test/src/components/LineChart/LineChartStyle.tsx",[],"/Users/suyeonkang/Desktop/frontend-test/src/reducer/context.js",[],"/Users/suyeonkang/Desktop/frontend-test/src/reducer/reducer.js",[],"/Users/suyeonkang/Desktop/frontend-test/src/reducer/actions.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":7,"column":8,"nodeType":"108","messageId":"109","endLine":7,"endColumn":19},{"ruleId":"106","severity":1,"message":"110","line":11,"column":8,"nodeType":"108","messageId":"109","endLine":11,"endColumn":22},{"ruleId":"106","severity":1,"message":"111","line":19,"column":7,"nodeType":"108","messageId":"109","endLine":19,"endColumn":29},{"ruleId":"106","severity":1,"message":"112","line":29,"column":5,"nodeType":"108","messageId":"109","endLine":29,"endColumn":10},{"ruleId":"106","severity":1,"message":"113","line":30,"column":5,"nodeType":"108","messageId":"109","endLine":30,"endColumn":10},{"ruleId":"106","severity":1,"message":"114","line":12,"column":10,"nodeType":"108","messageId":"109","endLine":12,"endColumn":19},{"ruleId":"106","severity":1,"message":"115","line":3,"column":21,"nodeType":"108","messageId":"109","endLine":3,"endColumn":25},{"ruleId":"106","severity":1,"message":"116","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":16},{"ruleId":"106","severity":1,"message":"117","line":5,"column":10,"nodeType":"108","messageId":"109","endLine":5,"endColumn":21},{"ruleId":"106","severity":1,"message":"118","line":12,"column":7,"nodeType":"108","messageId":"109","endLine":12,"endColumn":11},{"ruleId":"106","severity":1,"message":"119","line":18,"column":7,"nodeType":"108","messageId":"109","endLine":18,"endColumn":11},{"ruleId":"120","severity":1,"message":"121","line":12,"column":3,"nodeType":"108","messageId":"109","endLine":12,"endColumn":9},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"@typescript-eslint/no-unused-vars","'Informatics' is defined but never used.","Identifier","unusedVar","'useFetchSeries' is defined but never used.","'INFORMATICS' is assigned a value but never used.","'stime' is assigned a value but never used.","'etime' is assigned a value but never used.","'Endpoints' is defined but never used.","'Data' is defined but never used.","'useFetch' is defined but never used.","'Placeholder' is defined but never used.","'List' is assigned a value but never used.","'Item' is assigned a value but never used.","no-unused-vars","'active' is defined but never used.","no-global-assign","no-unsafe-negation"]